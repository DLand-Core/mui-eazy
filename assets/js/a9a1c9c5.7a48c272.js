"use strict";(self.webpackChunkdocs123=self.webpackChunkdocs123||[]).push([[8437],{6989:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>m,contentTitle:()=>d,default:()=>p,frontMatter:()=>c,metadata:()=>u,toc:()=>h});var t=r(7458),a=r(6687),s=r(608),o=r(9100),i=r(4471),l=(r(1092),r(1663));const c={sidebar_position:1},d="Tree Form {#configuration}",u={id:"components/super/tree-form",title:"Tree Form",description:"configuration}",source:"@site/docs/components/super/tree-form.mdx",sourceDirName:"components/super",slug:"/components/super/tree-form",permalink:"/docs/components/super/tree-form",draft:!1,unlisted:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/components/super/tree-form.mdx",tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"tutorialSidebar",previous:{title:"Super",permalink:"/docs/category/super"},next:{title:"Pro",permalink:"/docs/category/pro"}},m={},h=[{value:"Props",id:"npm2yarn-remark-plugin-configuration",level:2},{value:"Type",id:"type",level:2},{value:"TreeConfig",id:"TreeConfig",level:3},{value:"HandleClick",id:"HandleClick",level:3},{value:"ActionBtnArr",id:"ActionBtnArr",level:3}];function f(e){const n={a:"a",admonition:"admonition",code:"code",h1:"h1",h2:"h2",h3:"h3",li:"li",p:"p",pre:"pre",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,a.a)(),...e.components},{Details:r}=n;return r||function(e,n){throw new Error("Expected "+(n?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("Details",!0),(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.h1,{id:"configuration",children:"Tree Form"}),"\n",(0,t.jsx)(n.p,{children:'"tree + from" combined high-level component, suitable for dynamic and complex form submission functionality.'}),"\n","\n","\n",(0,t.jsx)(l.NotifyProvider,{children:(0,t.jsxs)(o.Z,{defaultValue:"Demo",values:[{label:"Demo",value:"Demo"},{label:"PlayGround",value:"PlayGround"}],children:[(0,t.jsx)(i.Z,{value:"PlayGround",children:(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-jsx",metastring:"live noInline",live:!0,children:'const useFormConfigCreater_general = (props) => {\n  return () => {\n    return {\n      title: {\n        fieldConfig: {},\n      },\n      sub_title: {\n        fieldConfig: {},\n      },\n      description: {},\n      content: {\n        type: "editer",\n      },\n      video: {},\n    };\n  };\n};\nconst useTreeConfig = () => {\n  const generalFormConfigCreater = useFormConfigCreater_general();\n  return useMemo(() => {\n    return {\n      depth: 0,\n      label: "Deal Basics",\n      active: true,\n      isCurrent: true,\n      formConfig: generalFormConfigCreater(),\n      sections: [\n        {\n          depth: 0,\n          label: "Business Details",\n          name: "businessDetails",\n          active: false,\n          type: "object",\n          sections: [\n            {\n              depth: 2,\n              label: "Executive Summary",\n              name: "executive_summary",\n              active: false,\n              formConfig: generalFormConfigCreater(),\n            },\n            {\n              depth: 2,\n              label: "Problem / Gap",\n              name: "problem_to_be_solved",\n              active: false,\n              formConfig: generalFormConfigCreater(),\n            },\n            {\n              depth: 2,\n              label: "Vision / Strategy",\n              name: "vision",\n              active: false,\n              formConfig: generalFormConfigCreater(),\n            },\n            {\n              depth: 2,\n              label: "Product / Service",\n              name: "product",\n              active: false,\n              formConfig: generalFormConfigCreater(),\n            },\n            {\n              depth: 2,\n              label: "Traction",\n              name: "traction",\n              active: false,\n              formConfig: generalFormConfigCreater(),\n            },\n            {\n              depth: 2,\n              label: "Business Model",\n              name: "business_model",\n\n              active: false,\n              formConfig: generalFormConfigCreater(),\n            },\n          ],\n        },\n        {\n          depth: 0,\n          label: "Market & Competition",\n          name: "marketCompetition",\n          active: false,\n          type: "object",\n\n          sections: [\n            {\n              depth: 2,\n              label: "Custormers",\n              name: "custormers",\n              active: false,\n              formConfig: generalFormConfigCreater(),\n            },\n            {\n              depth: 2,\n              label: "Market",\n              name: "market",\n              active: false,\n              formConfig: generalFormConfigCreater(),\n            },\n            {\n              depth: 2,\n              label: "Competition",\n              name: "competition",\n              active: false,\n              formConfig: generalFormConfigCreater(),\n            },\n          ],\n        },\n        {\n          depth: 0,\n          label: "Media",\n          name: "media",\n\n          active: false,\n          formConfig: generalFormConfigCreater(),\n        },\n        {\n          depth: 0,\n          label: "FAQ",\n          name: "faq",\n\n          active: false,\n          formConfig: generalFormConfigCreater(),\n        },\n      ],\n    };\n  }, []);\n};\n\nfunction MyPlayground(props) {\n  const treeFromConfig = useTreeConfig();\n  const actionBtnArr = useMemo(() => {\n    return [\n      {\n        name: "Update",\n      },\n      {\n        name: "Submit",\n      },\n    ];\n  }, []);\n  const handleClick = async ({\n    type,\n    isSuccess,\n    result,\n  }: {\n    type: EventType,\n    isSuccess: boolean,\n    result: any,\n  }) => {\n    if (!isSuccess) return;\n    switch (type) {\n      case "Update":\n        alert("Update");\n        break;\n      case "Submit":\n        alert("Submit");\n        break;\n      default:\n        break;\n    }\n  };\n  return (\n    <TreeForm\n      handleClick={handleClick}\n      actionBtnArr={actionBtnArr}\n      treeConfig={treeFromConfig}></TreeForm>\n  );\n}\nrender(<MyPlayground />);\n'})})}),(0,t.jsx)(i.Z,{value:"Demo",children:(0,t.jsx)(s.Z,{children:(0,t.jsx)(l.TreeFormDemo,{})})})]})}),"\n",(0,t.jsxs)(r,{children:[(0,t.jsx)("summary",{children:"show code"}),(0,t.jsxs)(o.Z,{children:[(0,t.jsx)(i.Z,{value:"componennt",children:(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-tsx",metastring:"{8,16,24,26,46,61-68} showLineNumbers",children:'import { TreeForm } from "mui-eazy";\nimport { useMemo } from "react";\nimport useTreeConfig from "./treeConfig";\nimport "mui-eazy/dist/style.css";\n// ----------------------------------------------------------------------\nexport type EventType = "Create" | "Draft" | "Update" | "Submit" | "Publish";\n\nconst transferInput = (value: any) => {\n  let newValue = {};\n  // ...\n  // transfer logic\n  // ...\n  return newValue;\n};\n\nconst transferResult = (result: any) => {\n  let newValue = {};\n  // ...\n  // transfer logic\n  // ...\n  return newValue;\n};\nexport default function ProductEditView() {\n  const treeFromConfig = useTreeConfig();\n  // handler\n  const handleClick = async ({\n    type,\n    isSuccess,\n    result,\n  }: {\n    type: EventType;\n    isSuccess: boolean;\n    result: any;\n  }) => {\n    if (!isSuccess) return;\n    switch (type) {\n      case "Draft":\n        // ...\n        // handler logic\n        // ...\n        break;\n      default:\n        break;\n    }\n  };\n  const actionBtnArr = useMemo<\n    {\n      name: EventType;\n    }[]\n  >(() => {\n    return [\n      {\n        name: "Update",\n      },\n      {\n        name: "Submit",\n      },\n    ];\n  }, []);\n  return (\n    <TreeForm\n      handleClick={handleClick}\n      treeConfig={treeFromConfig}\n      actionBtnArr={actionBtnArr}\n      value={null}\n      transferInput={transferInput}\n      transferResult={transferResult}\n    />\n  );\n}\n'})})}),(0,t.jsx)(i.Z,{value:"tree config",children:(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-tsx",metastring:"{61-68} showLineNumbers",children:'const useTreeConfig = (): TreeItemProps => {\n const rootFromConfigCreater = useFormConfigCreater_root();\n const generalFormConfigCreater = useFormConfigCreater_general();\n return useMemo(() => {\n  return {\n   depth: 0,\n   label: "Deal Basics",\n   active: true,\n   isCurrent: true,\n   formConfig: rootFromConfigCreater(),\n   sections: [\n    {\n     depth: 0,\n     label: "Business Details",\n     name: "businessDetails",\n     active: false,\n     type: "object",\n     sections: [\n      {\n       depth: 2,\n       label: "Executive Summary",\n       name: "executive_summary",\n       active: false,\n       formConfig: generalFormConfigCreater(),\n      },\n    ...\n    },\n    {\n     depth: 0,\n     label: "Market & Competition",\n     name: "marketCompetition",\n     active: false,\n     type: "object",\n     sections: [\n      {\n       depth: 2,\n       label: "Custormers",\n       name: "custormers",\n       active: false,\n       formConfig: generalFormConfigCreater(),\n      },\n      ...\n     ],\n    },\n    {\n     depth: 0,\n     label: "Media",\n     name: "media",\n     active: false,\n     formConfig: generalFormConfigCreater(),\n    },\n    {\n     depth: 0,\n     label: "FAQ",\n     name: "faq",\n     active: false,\n     formConfig: generalFormConfigCreater(),\n    },\n   ],\n  };\n }, []);\n};\n'})})}),(0,t.jsx)(i.Z,{value:"form config",children:(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-tsx",metastring:"showLineNumbers",children:'export const useFormConfigCreater_general = (\n  props: { id?: string } = {}\n): (() => FormConfig) => {\n  return () => {\n    return {\n      title: {\n        fieldConfig: {},\n      },\n      sub_title: {\n        fieldConfig: {},\n      },\n      description: {},\n      content: {\n        type: "editer",\n      },\n      video: {},\n    };\n  };\n};\n'})})})]})]}),"\n",(0,t.jsx)(n.h2,{id:"npm2yarn-remark-plugin-configuration",children:"Props"}),"\n",(0,t.jsx)(n.admonition,{title:"tip",type:"tip",children:(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Type: any, can be customized as needed."}),"\n",(0,t.jsxs)(n.li,{children:["Default value:","\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Not specified: optional."}),"\n",(0,t.jsx)(n.li,{children:'Specified as "require": mandatory.'}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.li,{children:"Type link: Click to navigate to the details below."}),"\n"]})}),"\n",(0,t.jsxs)(n.table,{children:[(0,t.jsx)(n.thead,{children:(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.th,{children:"Option"}),(0,t.jsx)(n.th,{children:"Type"}),(0,t.jsx)(n.th,{children:"Default"}),(0,t.jsx)(n.th,{children:"Description"})]})}),(0,t.jsxs)(n.tbody,{children:[(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"treeConfig"})}),(0,t.jsx)(n.td,{children:(0,t.jsx)(n.a,{href:"#TreeConfig",children:(0,t.jsx)(n.code,{children:"TreeConfig"})})}),(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"required"})}),(0,t.jsx)(n.td,{children:"Driving the display of data for tree+form."})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"handleClick"})}),(0,t.jsx)(n.td,{children:(0,t.jsx)(n.a,{href:"#HandleClick",children:(0,t.jsx)(n.code,{children:"HandleClick"})})}),(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"required"})}),(0,t.jsx)(n.td,{children:"click event handler"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"actionBtnArr"})}),(0,t.jsx)(n.td,{children:(0,t.jsx)(n.a,{href:"#ActionBtnArr",children:(0,t.jsx)(n.code,{children:"ActionBtnArr"})})}),(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"required"})}),(0,t.jsx)(n.td,{children:"Whether to sync the selected converter across all code blocks."})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"value"})}),(0,t.jsx)(n.td,{children:"any"}),(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"null"})}),(0,t.jsx)(n.td,{children:"The value to be edited. Note that you should pass null or not pass it when creating, and pass it when editing."})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"transferInput"})}),(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"(value)=>value"})}),(0,t.jsx)(n.td,{}),(0,t.jsxs)(n.td,{children:["Translate the ",(0,t.jsx)(n.code,{children:"target data"}),". into ",(0,t.jsx)(n.code,{children:"form results"}),"."]})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"transferResult"})}),(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"(value)=>value"})}),(0,t.jsx)(n.td,{}),(0,t.jsxs)(n.td,{children:["Translate the ",(0,t.jsx)(n.code,{children:"form results"})," into ",(0,t.jsx)(n.code,{children:"target data"}),"."]})]})]})]}),"\n",(0,t.jsx)(n.h2,{id:"type",children:"Type"}),"\n",(0,t.jsx)(n.h3,{id:"TreeConfig",children:"TreeConfig"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-tsx",children:'export interface TreeItemProps {\n  isError?: boolean;\n  formConfig?: FormConfig | null;\n  formCreater?: () => TreeItemProps | null;\n  id?: string;\n  parentId?: string;\n  uuid?: string;\n  active: boolean;\n  isCurrent?: boolean;\n  depth: number;\n  label: string;\n  name?: string;\n  sx?: SxProps<Theme>;\n  isAdd?: boolean;\n  type?: "array" | "object";\n  onAdd?: (listArr: TreeItemProps[]) => void;\n  onDelete?: (id: string, listArr: TreeItemProps[]) => void;\n  children?: React.ReactNode | undefined;\n  sections?: TreeItemProps[];\n  judeShow?: () => boolean;\n}\n'})}),"\n",(0,t.jsx)(n.h3,{id:"HandleClick",children:"HandleClick"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ts",children:"  ({ type, isSuccess, result, }: {\n    type: any;\n    isSuccess: boolean;\n    result: any;\n  }) => void\n"})}),"\n",(0,t.jsx)(n.h3,{id:"ActionBtnArr",children:"ActionBtnArr"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ts",children:"{\n  name: string;\n}\n[];\n"})})]})}function p(e={}){const{wrapper:n}={...(0,a.a)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(f,{...e})}):f(e)}},4471:(e,n,r)=>{r.d(n,{Z:()=>o});r(2983);var t=r(4517);const a={tabItem:"tabItem_drg6"};var s=r(7458);function o(e){let{children:n,hidden:r,className:o}=e;return(0,s.jsx)("div",{role:"tabpanel",className:(0,t.Z)(a.tabItem,o),hidden:r,children:n})}},9100:(e,n,r)=>{r.d(n,{Z:()=>y});var t=r(2983),a=r(4517),s=r(7247),o=r(3729),i=r(5685),l=r(9656),c=r(1559),d=r(1426);function u(e){return t.Children.toArray(e).filter((e=>"\n"!==e)).map((e=>{if(!e||(0,t.isValidElement)(e)&&function(e){const{props:n}=e;return!!n&&"object"==typeof n&&"value"in n}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))?.filter(Boolean)??[]}function m(e){const{values:n,children:r}=e;return(0,t.useMemo)((()=>{const e=n??function(e){return u(e).map((e=>{let{props:{value:n,label:r,attributes:t,default:a}}=e;return{value:n,label:r,attributes:t,default:a}}))}(r);return function(e){const n=(0,c.l)(e,((e,n)=>e.value===n.value));if(n.length>0)throw new Error(`Docusaurus error: Duplicate values "${n.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[n,r])}function h(e){let{value:n,tabValues:r}=e;return r.some((e=>e.value===n))}function f(e){let{queryString:n=!1,groupId:r}=e;const a=(0,o.k6)(),s=function(e){let{queryString:n=!1,groupId:r}=e;if("string"==typeof n)return n;if(!1===n)return null;if(!0===n&&!r)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return r??null}({queryString:n,groupId:r});return[(0,l._X)(s),(0,t.useCallback)((e=>{if(!s)return;const n=new URLSearchParams(a.location.search);n.set(s,e),a.replace({...a.location,search:n.toString()})}),[s,a])]}function p(e){const{defaultValue:n,queryString:r=!1,groupId:a}=e,s=m(e),[o,l]=(0,t.useState)((()=>function(e){let{defaultValue:n,tabValues:r}=e;if(0===r.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(n){if(!h({value:n,tabValues:r}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${n}" but none of its children has the corresponding value. Available values are: ${r.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return n}const t=r.find((e=>e.default))??r[0];if(!t)throw new Error("Unexpected error: 0 tabValues");return t.value}({defaultValue:n,tabValues:s}))),[c,u]=f({queryString:r,groupId:a}),[p,g]=function(e){let{groupId:n}=e;const r=function(e){return e?`docusaurus.tab.${e}`:null}(n),[a,s]=(0,d.Nk)(r);return[a,(0,t.useCallback)((e=>{r&&s.set(e)}),[r,s])]}({groupId:a}),b=(()=>{const e=c??p;return h({value:e,tabValues:s})?e:null})();(0,i.Z)((()=>{b&&l(b)}),[b]);return{selectedValue:o,selectValue:(0,t.useCallback)((e=>{if(!h({value:e,tabValues:s}))throw new Error(`Can't select invalid tab value=${e}`);l(e),u(e),g(e)}),[u,g,s]),tabValues:s}}var g=r(9038);const b={tabList:"tabList_yUtf",tabItem:"tabItem_iTH3"};var x=r(7458);function j(e){let{className:n,block:r,selectedValue:t,selectValue:o,tabValues:i}=e;const l=[],{blockElementScrollPositionUntilNextRender:c}=(0,s.o5)(),d=e=>{const n=e.currentTarget,r=l.indexOf(n),a=i[r].value;a!==t&&(c(n),o(a))},u=e=>{let n=null;switch(e.key){case"Enter":d(e);break;case"ArrowRight":{const r=l.indexOf(e.currentTarget)+1;n=l[r]??l[0];break}case"ArrowLeft":{const r=l.indexOf(e.currentTarget)-1;n=l[r]??l[l.length-1];break}}n?.focus()};return(0,x.jsx)("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,a.Z)("tabs",{"tabs--block":r},n),children:i.map((e=>{let{value:n,label:r,attributes:s}=e;return(0,x.jsx)("li",{role:"tab",tabIndex:t===n?0:-1,"aria-selected":t===n,ref:e=>l.push(e),onKeyDown:u,onClick:d,...s,className:(0,a.Z)("tabs__item",b.tabItem,s?.className,{"tabs__item--active":t===n}),children:r??n},n)}))})}function v(e){let{lazy:n,children:r,selectedValue:a}=e;const s=(Array.isArray(r)?r:[r]).filter(Boolean);if(n){const e=s.find((e=>e.props.value===a));return e?(0,t.cloneElement)(e,{className:"margin-top--md"}):null}return(0,x.jsx)("div",{className:"margin-top--md",children:s.map(((e,n)=>(0,t.cloneElement)(e,{key:n,hidden:e.props.value!==a})))})}function C(e){const n=p(e);return(0,x.jsxs)("div",{className:(0,a.Z)("tabs-container",b.tabList),children:[(0,x.jsx)(j,{...e,...n}),(0,x.jsx)(v,{...e,...n})]})}function y(e){const n=(0,g.Z)();return(0,x.jsx)(C,{...e,children:u(e.children)},String(n))}},608:(e,n,r)=>{r.d(n,{Z:()=>o});r(2983);var t=r(4517);const a={browserWindow:"browserWindow_my1Q",browserWindowHeader:"browserWindowHeader_jXSR",row:"row_KZDM",buttons:"buttons_uHc7",right:"right_oyze",browserWindowAddressBar:"browserWindowAddressBar_Pd8y",dot:"dot_giz1",browserWindowMenuIcon:"browserWindowMenuIcon_Vhuh",bar:"bar_rrRL",browserWindowBody:"browserWindowBody_Idgs"};var s=r(7458);function o(e){let{children:n,minHeight:r,url:o="http://localhost:3000",style:i,bodyStyle:l}=e;return(0,s.jsxs)("div",{className:a.browserWindow,style:{...i,minHeight:r},children:[(0,s.jsxs)("div",{className:a.browserWindowHeader,children:[(0,s.jsxs)("div",{className:a.buttons,children:[(0,s.jsx)("span",{className:a.dot,style:{background:"#f25f58"}}),(0,s.jsx)("span",{className:a.dot,style:{background:"#fbbe3c"}}),(0,s.jsx)("span",{className:a.dot,style:{background:"#58cb42"}})]}),(0,s.jsx)("div",{className:(0,t.Z)(a.browserWindowAddressBar,"text--truncate"),children:o}),(0,s.jsx)("div",{className:a.browserWindowMenuIcon,children:(0,s.jsxs)("div",{children:[(0,s.jsx)("span",{className:a.bar}),(0,s.jsx)("span",{className:a.bar}),(0,s.jsx)("span",{className:a.bar})]})})]}),(0,s.jsx)("div",{className:a.browserWindowBody,style:l,children:n})]})}},1092:()=>{}}]);