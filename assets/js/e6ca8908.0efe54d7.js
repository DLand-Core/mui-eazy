"use strict";(self.webpackChunkmui_eazy_docs=self.webpackChunkmui_eazy_docs||[]).push([[1304],{4171:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>u,contentTitle:()=>c,default:()=>p,frontMatter:()=>d,metadata:()=>m,toc:()=>f});var i=r(7458),t=r(6687),o=r(608),s=r(9100),a=r(4471),l=(r(1092),r(6615));const d={sidebar_position:1},c="Tab Form {#configuration}",m={id:"components/super/tab-form",title:"Tab Form",description:"configuration}",source:"@site/docs/components/super/tab-form.mdx",sourceDirName:"components/super",slug:"/components/super/tab-form",permalink:"/mui-eazy/docs/components/super/tab-form",draft:!1,unlisted:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/components/super/tab-form.mdx",tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"tutorialSidebar",previous:{title:"Super",permalink:"/mui-eazy/docs/category/super"},next:{title:"Tree Form",permalink:"/mui-eazy/docs/components/super/tree-form"}},u={},f=[{value:"Props",id:"npm2yarn-remark-plugin-configuration",level:2},{value:"Type",id:"type",level:2},{value:"TreeConfig",id:"TreeConfig",level:3},{value:"HandleClick",id:"HandleClick",level:3},{value:"ActionBtnArr",id:"ActionBtnArr",level:3}];function h(e){const n={a:"a",admonition:"admonition",code:"code",h1:"h1",h2:"h2",h3:"h3",li:"li",p:"p",pre:"pre",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,t.a)(),...e.components},{Details:r}=n;return r||function(e,n){throw new Error("Expected "+(n?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("Details",!0),(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.h1,{id:"configuration",children:"Tab Form"}),"\n",(0,i.jsx)(n.p,{children:'"tree + from" combined high-level component, suitable for dynamic and complex form submission functionality.'}),"\n","\n","\n",(0,i.jsx)(l.NotifyProvider,{children:(0,i.jsxs)(s.Z,{defaultValue:"Demo",values:[{label:"Demo",value:"Demo"},{label:"PlayGround",value:"PlayGround"}],children:[(0,i.jsx)(a.Z,{value:"PlayGround",children:(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-jsx",metastring:"live noInline",live:!0,children:'const useFormConfigCreater_general = (props) => {\n  return () => {\n    return {\n      title: {\n        fieldConfig: {},\n      },\n      sub_title: {\n        fieldConfig: {},\n      },\n      description: {},\n      content: {\n        type: "editer",\n      },\n      video: {},\n    };\n  };\n};\nconst useTreeConfig = () => {\n  const generalFormConfigCreater = useFormConfigCreater_general();\n  return useMemo(() => {\n    return {\n      depth: 0,\n      label: "Deal Basics",\n      active: true,\n      isCurrent: true,\n      formConfig: generalFormConfigCreater(),\n      sections: [\n        {\n          depth: 0,\n          label: "Business Details",\n          name: "businessDetails",\n          active: false,\n          type: "object",\n          sections: [\n            {\n              depth: 2,\n              label: "Executive Summary",\n              name: "executive_summary",\n              active: false,\n              formConfig: generalFormConfigCreater(),\n            },\n            {\n              depth: 2,\n              label: "Problem / Gap",\n              name: "problem_to_be_solved",\n              active: false,\n              formConfig: generalFormConfigCreater(),\n            },\n            {\n              depth: 2,\n              label: "Vision / Strategy",\n              name: "vision",\n              active: false,\n              formConfig: generalFormConfigCreater(),\n            },\n            {\n              depth: 2,\n              label: "Product / Service",\n              name: "product",\n              active: false,\n              formConfig: generalFormConfigCreater(),\n            },\n            {\n              depth: 2,\n              label: "Traction",\n              name: "traction",\n              active: false,\n              formConfig: generalFormConfigCreater(),\n            },\n            {\n              depth: 2,\n              label: "Business Model",\n              name: "business_model",\n\n              active: false,\n              formConfig: generalFormConfigCreater(),\n            },\n          ],\n        },\n        {\n          depth: 0,\n          label: "Market & Competition",\n          name: "marketCompetition",\n          active: false,\n          type: "object",\n\n          sections: [\n            {\n              depth: 2,\n              label: "Custormers",\n              name: "custormers",\n              active: false,\n              formConfig: generalFormConfigCreater(),\n            },\n            {\n              depth: 2,\n              label: "Market",\n              name: "market",\n              active: false,\n              formConfig: generalFormConfigCreater(),\n            },\n            {\n              depth: 2,\n              label: "Competition",\n              name: "competition",\n              active: false,\n              formConfig: generalFormConfigCreater(),\n            },\n          ],\n        },\n        {\n          depth: 0,\n          label: "Media",\n          name: "media",\n\n          active: false,\n          formConfig: generalFormConfigCreater(),\n        },\n        {\n          depth: 0,\n          label: "FAQ",\n          name: "faq",\n\n          active: false,\n          formConfig: generalFormConfigCreater(),\n        },\n      ],\n    };\n  }, []);\n};\n\nfunction MyPlayground(props) {\n  const treeFromConfig = useTreeConfig();\n  const actionBtnArr = useMemo(() => {\n    return [\n      {\n        name: "Update",\n      },\n      {\n        name: "Submit",\n      },\n    ];\n  }, []);\n  const handleClick = async ({\n    type,\n    isSuccess,\n    result,\n  }: {\n    type: EventType,\n    isSuccess: boolean,\n    result: any,\n  }) => {\n    if (!isSuccess) return;\n    switch (type) {\n      case "Update":\n        alert("Update");\n        break;\n      case "Submit":\n        alert("Submit");\n        break;\n      default:\n        break;\n    }\n  };\n  return (\n    <TreeForm\n      handleClick={handleClick}\n      actionBtnArr={actionBtnArr}\n      treeConfig={treeFromConfig}></TreeForm>\n  );\n}\nrender(<MyPlayground />);\n'})})}),(0,i.jsx)(a.Z,{value:"Demo",children:(0,i.jsx)(o.Z,{children:(0,i.jsx)(l.TabFormDemo,{})})})]})}),"\n",(0,i.jsxs)(r,{children:[(0,i.jsx)("summary",{children:"show code"}),(0,i.jsxs)(s.Z,{children:[(0,i.jsx)(a.Z,{value:"componennt",children:(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-tsx",metastring:"{8,16,24,26,46,61-68} showLineNumbers",children:'import { TreeForm } from "mui-eazy";\nimport { useMemo } from "react";\nimport useTreeConfig from "./treeConfig";\nimport "mui-eazy/dist/style.css";\n// ----------------------------------------------------------------------\nexport type EventType = "Create" | "Draft" | "Update" | "Submit" | "Publish";\n\nconst transferInput = (value: any) => {\n  let newValue = {};\n  // ...\n  // transfer logic\n  // ...\n  return newValue;\n};\n\nconst transferResult = (result: any) => {\n  let newValue = {};\n  // ...\n  // transfer logic\n  // ...\n  return newValue;\n};\nexport default function ProductEditView() {\n  const treeFromConfig = useTreeConfig();\n  // handler\n  const handleClick = async ({\n    type,\n    isSuccess,\n    result,\n  }: {\n    type: EventType;\n    isSuccess: boolean;\n    result: any;\n  }) => {\n    if (!isSuccess) return;\n    switch (type) {\n      case "Draft":\n        // ...\n        // handler logic\n        // ...\n        break;\n      default:\n        break;\n    }\n  };\n  const actionBtnArr = useMemo<\n    {\n      name: EventType;\n    }[]\n  >(() => {\n    return [\n      {\n        name: "Update",\n      },\n      {\n        name: "Submit",\n      },\n    ];\n  }, []);\n  return (\n    <TreeForm\n      handleClick={handleClick}\n      treeConfig={treeFromConfig}\n      actionBtnArr={actionBtnArr}\n      value={null}\n      transferInput={transferInput}\n      transferResult={transferResult}\n    />\n  );\n}\n'})})}),(0,i.jsx)(a.Z,{value:"tree config",children:(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-tsx",metastring:"{61-68} showLineNumbers",children:'import { useMemo, useRef, useState } from "react";\nimport { useDealTypeFormViewConfig } from "./useDealTypeFormViewConfig";\nimport { TabForm } from "../components";\nimport { useDealBasicsFormViewConfig } from "./useDealBasicsFormViewConfig";\nimport { useBusinessFormViewConfig } from "./useBusinessFormViewConfig";\nimport { useMarketFormViewConfig } from "./useMarketFormViewConfig";\nimport { useMediaFormViewConfig } from "./useMediaFormViewConfig";\nimport { useFaqFromViewConfig } from "./useFaqFromViewConfig";\n\n// ----------------------------------------------------------------------\nexport type EventType = "Create" | "Draft" | "Update" | "Submit" | "Publish";\n\nexport default function Demo() {\n  const [tabId, setTabId] = useState("1");\n  const tabFormRef = useRef();\n  const defaultValues = {};\n  const dealTypeFormViewConfig = useDealTypeFormViewConfig({ defaultValues });\n  const dealBasicsFormViewConfig = useDealBasicsFormViewConfig({\n    defaultValues,\n  });\n  const businessFormViewViewConfig = useBusinessFormViewConfig({\n    defaultValues,\n  });\n  const marketFormViewonfig = useMarketFormViewConfig({ defaultValues });\n  const mediaFormViewConfig = useMediaFormViewConfig({ defaultValues });\n  const faqFromViewConfig = useFaqFromViewConfig({ defaultValues });\n  const tabConfig = useMemo(() => {\n    return [\n      {\n        id: "1",\n        label: "Deal Type",\n        node: dealTypeFormViewConfig,\n      },\n      {\n        id: "2",\n        label: "Deal Basics",\n        node: dealBasicsFormViewConfig,\n      },\n      {\n        id: "3",\n        label: "Business Details",\n        node: businessFormViewViewConfig,\n      },\n      {\n        id: "4",\n        label: "Market & Competition",\n        node: marketFormViewonfig,\n      },\n      {\n        id: "5",\n        label: "Uploads & Media",\n        node: mediaFormViewConfig,\n      },\n      {\n        id: "6",\n        label: "FAQs",\n        node: faqFromViewConfig,\n      },\n    ];\n  }, [\n    dealTypeFormViewConfig,\n    dealBasicsFormViewConfig,\n    businessFormViewViewConfig,\n    marketFormViewonfig,\n    mediaFormViewConfig,\n    faqFromViewConfig,\n  ]);\n  return (\n    <TabForm\n      //@ts-ignore\n      tabId={tabId}\n      handleTabChange={(newTabId) => {\n        setTabId(newTabId);\n      }}\n      tabConfig={tabConfig}\n      ref={tabFormRef}\n    />\n  );\n}\n'})})}),(0,i.jsx)(a.Z,{value:"form config",children:(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-tsx",metastring:"showLineNumbers",children:'export const useFormConfigCreater_general = (\n  props: { id?: string } = {}\n): (() => FormConfig) => {\n  return () => {\n    return {\n      title: {\n        fieldConfig: {},\n      },\n      sub_title: {\n        fieldConfig: {},\n      },\n      description: {},\n      content: {\n        type: "editer",\n      },\n      video: {},\n    };\n  };\n};\n'})})})]})]}),"\n",(0,i.jsx)(n.h2,{id:"npm2yarn-remark-plugin-configuration",children:"Props"}),"\n",(0,i.jsx)(n.admonition,{title:"tip",type:"tip",children:(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Type: any, can be customized as needed."}),"\n",(0,i.jsxs)(n.li,{children:["Default value:","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Not specified: optional."}),"\n",(0,i.jsx)(n.li,{children:'Specified as "require": mandatory.'}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.li,{children:"Type link: Click to navigate to the details below."}),"\n"]})}),"\n",(0,i.jsxs)(n.table,{children:[(0,i.jsx)(n.thead,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.th,{children:"Option"}),(0,i.jsx)(n.th,{children:"Type"}),(0,i.jsx)(n.th,{children:"Default"}),(0,i.jsx)(n.th,{children:"Description"})]})}),(0,i.jsxs)(n.tbody,{children:[(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"treeConfig"})}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.a,{href:"#TreeConfig",children:(0,i.jsx)(n.code,{children:"TreeConfig"})})}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"required"})}),(0,i.jsx)(n.td,{children:"Driving the display of data for tree+form."})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"handleClick"})}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.a,{href:"#HandleClick",children:(0,i.jsx)(n.code,{children:"HandleClick"})})}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"required"})}),(0,i.jsx)(n.td,{children:"click event handler"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"actionBtnArr"})}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.a,{href:"#ActionBtnArr",children:(0,i.jsx)(n.code,{children:"ActionBtnArr"})})}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"required"})}),(0,i.jsx)(n.td,{children:"Whether to sync the selected converter across all code blocks."})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"value"})}),(0,i.jsx)(n.td,{children:"any"}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"null"})}),(0,i.jsx)(n.td,{children:"The value to be edited. Note that you should pass null or not pass it when creating, and pass it when editing."})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"transferInput"})}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"(value)=>value"})}),(0,i.jsx)(n.td,{}),(0,i.jsxs)(n.td,{children:["Translate the ",(0,i.jsx)(n.code,{children:"target data"}),". into ",(0,i.jsx)(n.code,{children:"form results"}),"."]})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"transferResult"})}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"(value)=>value"})}),(0,i.jsx)(n.td,{}),(0,i.jsxs)(n.td,{children:["Translate the ",(0,i.jsx)(n.code,{children:"form results"})," into ",(0,i.jsx)(n.code,{children:"target data"}),"."]})]})]})]}),"\n",(0,i.jsx)(n.h2,{id:"type",children:"Type"}),"\n",(0,i.jsx)(n.h3,{id:"TreeConfig",children:"TreeConfig"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-tsx",children:'export interface TreeItemProps {\n  isError?: boolean;\n  formConfig?: FormConfig | null;\n  formCreater?: () => TreeItemProps | null;\n  id?: string;\n  parentId?: string;\n  uuid?: string;\n  active: boolean;\n  isCurrent?: boolean;\n  depth: number;\n  label: string;\n  name?: string;\n  sx?: SxProps<Theme>;\n  isAdd?: boolean;\n  type?: "array" | "object";\n  onAdd?: (listArr: TreeItemProps[]) => void;\n  onDelete?: (id: string, listArr: TreeItemProps[]) => void;\n  children?: React.ReactNode | undefined;\n  sections?: TreeItemProps[];\n  judeShow?: () => boolean;\n}\n'})}),"\n",(0,i.jsx)(n.h3,{id:"HandleClick",children:"HandleClick"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-ts",children:"  ({ type, isSuccess, result, }: {\n    type: any;\n    isSuccess: boolean;\n    result: any;\n  }) => void\n"})}),"\n",(0,i.jsx)(n.h3,{id:"ActionBtnArr",children:"ActionBtnArr"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-ts",children:"{\n  name: string;\n}\n[];\n"})})]})}function p(e={}){const{wrapper:n}={...(0,t.a)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(h,{...e})}):h(e)}},1092:()=>{}}]);